/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaGUI;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Sylvester
 */
public class ManagerChangeRoomRate extends javax.swing.JFrame {
    private List<String[]> rooms = new ArrayList<>();
    private static final String FILE_PATH = "roomtype.txt"; 
    private String ManagerID;
    /**
     * Creates new form ChangeRoomRate
     */
    public ManagerChangeRoomRate() {
        initComponents();
    }
    public ManagerChangeRoomRate(String userID) {
        initComponents();
        ManagerID = userID;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        RoomComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CurrentPriceLabel = new javax.swing.JLabel();
        NewPriceTextfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaGUI/images/back arrow .png"))); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        RoomComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        RoomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Room", "Single Room", "Double Room", "Triple Room" }));
        RoomComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Current Price:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Choose Room: ");

        CurrentPriceLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CurrentPriceLabel.setText("Price");

        NewPriceTextfield.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NewPriceTextfield.setText("Type New Price");
        NewPriceTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPriceTextfieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("New Price:");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Change Price");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 150, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CurrentPriceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RoomComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NewPriceTextfield))
                        .addGap(146, 146, 146))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(234, 234, 234))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton)
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CurrentPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewPriceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RoomComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomComboBoxActionPerformed
        loadRoom();
        String selectedroom = (String)RoomComboBox.getSelectedItem();
        if (selectedroom != "Choose Room" ){
            String[] room = getRoomID(selectedroom);
            CurrentPriceLabel.setText(room[2]);
        }
        
        
        
        
    }//GEN-LAST:event_RoomComboBoxActionPerformed

    private void NewPriceTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPriceTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewPriceTextfieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String newPrice= NewPriceTextfield.getText();
        String selectedroom = (String)RoomComboBox.getSelectedItem();
        if (validateNewPrice()){
            String[] room = getRoomID(selectedroom);
            System.out.println(room[0]);
            updateRoomFile(room[0],newPrice);
            JOptionPane.showMessageDialog(this, "New Price Saved Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            loadRoom();
            String[] roomdetails = getRoomID(selectedroom);
            CurrentPriceLabel.setText(roomdetails[2]);
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        dispose();
        ManagerScreen MScreen = new ManagerScreen(ManagerID);
        MScreen.setVisible(true);
        
    }//GEN-LAST:event_BackButtonActionPerformed
    private void loadRoom() {
        rooms.clear();
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] roomDetails = line.split(",");
                if (roomDetails.length == 3) {
                    rooms.add(roomDetails);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading file: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private String[] getRoomID(String roomName) {
    for (String[] room : rooms) {
        if (room[1].equals(roomName)) { 
            return room; 
        }
    }
    return null; 
    }
    private boolean validateNewPrice() {
    String newPrice = NewPriceTextfield.getText().trim();
    String selectedroom = (String)RoomComboBox.getSelectedItem();
    if (selectedroom == "Choose Room" ){
        JOptionPane.showMessageDialog(this, "Please Choose A Room.", 
                "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (newPrice.isEmpty() || newPrice.equals("Type New Price")) {
        JOptionPane.showMessageDialog(this, "Price cannot be empty or the default text.", 
                "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false; 
    }
    
    try {
        Integer.parseInt(newPrice); 
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Price must be a valid integer.", 
                "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false; 
    }
    
    return true; 
    }
    
    private void updateRoomFile(String roomID, String newPrice) {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_PATH));
            PrintWriter writer = new PrintWriter(new FileWriter("temp.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] roomDetails = line.split(",");
                if (roomDetails.length == 3 && roomDetails[0].equals(roomID)) {
                    roomDetails[2] = newPrice;
                    System.out.println(roomDetails[2]);
                    writer.println(String.join(",", roomDetails));
                } else {
                    writer.println(line);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error updating file: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        File originalFile = new File(FILE_PATH);
        File tempFile = new File("temp.txt");
        if (originalFile.delete() && tempFile.renameTo(originalFile)) {
            System.out.println("File updated successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Error replacing the original file.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerChangeRoomRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerChangeRoomRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerChangeRoomRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerChangeRoomRate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerChangeRoomRate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel CurrentPriceLabel;
    private javax.swing.JTextField NewPriceTextfield;
    private javax.swing.JComboBox<String> RoomComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
