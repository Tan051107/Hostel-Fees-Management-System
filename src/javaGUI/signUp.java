/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaGUI;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Year;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author taniv
 */
public class signUp extends javax.swing.JFrame {

    /**
     * Creates new form signupSection
     */
    public signUp() {
        initComponents();
        this.setResizable(false);
        this.setSize(535,480);
        confirmPassword.setEchoChar('*');
        createPassword.setEchoChar('*');
        int curr_year = Year.now().getValue();
        for (int year=curr_year;year>=1900;year--){
            birthdateYear.add(String.valueOf(year));
        }
        for (int month=1;month<=12;month++){
            birthdateMonth.add(String.valueOf(month));
        }
        for (int day=1;day<=31;day++){
            birthdateDay.add(String.valueOf(day));
        }
        roomType.setVisible(false);
        roomTypeLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        completeSignup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        confirmpasswordShow = new javax.swing.JCheckBox();
        userID = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        identity = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        phoneNumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        createPassword = new javax.swing.JPasswordField();
        birthdateMonth = new java.awt.Choice();
        confirmPassword = new javax.swing.JPasswordField();
        birthdateYear = new java.awt.Choice();
        createpasswordShow = new javax.swing.JCheckBox();
        birthdateDay = new java.awt.Choice();
        roomTypeLabel = new javax.swing.JLabel();
        roomType = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Sign Up");

        completeSignup.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        completeSignup.setText("Complete Sign Up");
        completeSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeSignupActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Full Name");

        confirmpasswordShow.setText("Show Password");
        confirmpasswordShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmpasswordShowActionPerformed(evt);
            }
        });

        userID.setText("TP");
        userID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        identity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Assistant Manager", "Staff", "Resident" }));
        identity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                identityItemStateChanged(evt);
            }
        });
        identity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identityActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Identity");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Phone Number");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("User ID");

        phoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Birth Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Confirm Password");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Email Address");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Create Password");

        createpasswordShow.setText("Show Password");
        createpasswordShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createpasswordShowActionPerformed(evt);
            }
        });

        roomTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        roomTypeLabel.setText("Room Type");

        roomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single Room", "Double Room", "Triple Room" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(roomTypeLabel)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addComponent(jLabel9)
                                .addComponent(jLabel8))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(identity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(birthdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(birthdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(birthdateDay, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createpasswordShow)
                            .addComponent(confirmpasswordShow))))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(birthdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthdateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createpasswordShow)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmpasswordShow)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomTypeLabel)
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaGUI/images/back arrow .png"))); // NOI18N
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(168, 168, 168)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(backButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(completeSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(completeSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int day = 0;
        switch (birthdateMonth.getSelectedItem()){
            case "1","3","5","7","8","10","12":
                day = 31;
                break;
            case "4","6","9","11":
                day =30;
                break;
            case "2":
                if (((Integer.parseInt(birthdateYear.getSelectedItem())%4==0) & !(Integer.parseInt(birthdateYear.getSelectedItem())%100==0))|| (Integer.parseInt(birthdateYear.getSelectedItem())%400==0)){
                    day = 29;
                    break;
                }
                else{
                    day = 28;
                }
        }
        
        displayUserProfile user_profile = new displayUserProfile();
        int user_index = 0;
        try {
            user_index = user_profile.profileIndex(userID.getText());
            System.out.println(user_index);
        } catch (IOException ex) {
            Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if ((name.getText().equals(""))||(userID.getText().equals(""))||(email.getText().equals(""))){
            JOptionPane.showMessageDialog(null, "Please fill up all required field","Warning Message",JOptionPane.ERROR_MESSAGE);

        }
        
        
        else if (Integer.parseInt(birthdateDay.getSelectedItem())>day){
            JOptionPane.showMessageDialog(null, "Invalid Birth Date","Warning Message",JOptionPane.ERROR_MESSAGE);
            
        }
        
        else if (!email.getText().contains("@")){
            JOptionPane.showMessageDialog(null, "Invalid Email Address","Warning Message",JOptionPane.ERROR_MESSAGE);
        }
        
        else{
            try {
                BufferedWriter ApprovalList = new BufferedWriter(new FileWriter("ApprovalList.txt",true));
                ApprovalList.append(name.getText()+","+birthdateYear.getSelectedItem()+"-"+birthdateMonth.getSelectedItem()+"-"+birthdateDay.getSelectedItem()+","+email.getText()+","+userID.getText()+","+identity.getSelectedItem()+"\n");
                ApprovalList.close();
            } catch (IOException ex) {
                Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void userIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIDActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        
    }//GEN-LAST:event_emailActionPerformed

    private void phoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberActionPerformed

    private void createpasswordShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createpasswordShowActionPerformed
        if (createpasswordShow.isSelected()){
            createPassword.setEchoChar((char)0);
        }
        else{
            createPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_createpasswordShowActionPerformed

    private void completeSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeSignupActionPerformed
        int day = 0;
        switch (birthdateMonth.getSelectedItem()){
            case "1","3","5","7","8","10","12":
                day = 31;
                break;
            case "4","6","9","11":
                day =30;
                break;
            case "2":
                if (((Integer.parseInt(birthdateYear.getSelectedItem())%4==0) & !(Integer.parseInt(birthdateYear.getSelectedItem())%100==0))|| (Integer.parseInt(birthdateYear.getSelectedItem())%400==0)){
                    day = 29;
                    break;
                }
                else{
                    day = 28;
                }
        }
        
        displayUserProfile user_profile = new displayUserProfile();
        int user_index = 0;
        try {
            user_index = user_profile.profileIndex(userID.getText());
            System.out.println(user_index);
        } catch (IOException ex) {
            Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        validateNumber validatePhone = new validateNumber();
        boolean isAPhone = validatePhone.isANumber(phoneNumber.getText());
        
        if ((name.getText().equals(""))||(userID.getText().equals(""))||(email.getText().equals(""))||(phoneNumber.getText().equals(""))||(confirmPassword.getText().equals(""))||(createPassword.getText().equals(""))){
            JOptionPane.showMessageDialog(null, "Please fill up all required field","Warning Message",JOptionPane.ERROR_MESSAGE);

        }
        
        else if (user_index!=0){
           JOptionPane.showMessageDialog(null, "You have already sign up an account","Warning Message",JOptionPane.ERROR_MESSAGE); 
        }
        else if (name.getText().contains(",")){
            JOptionPane.showMessageDialog(null, "Name cannot contain (,)","Invalid Name",JOptionPane.ERROR_MESSAGE);
        }
        
        else if (userID.getText().length() != 8 ||userID.getText().contains(",")){
            JOptionPane.showMessageDialog(null,"Please enter a valid UserID","Invalid UserID",JOptionPane.WARNING_MESSAGE);
        }
        else if (!userID.getText().startsWith("TP")){
            JOptionPane.showMessageDialog(null,"Invalid User ID Format(Must Start With (TP)","Invalid UserID Format",JOptionPane.WARNING_MESSAGE);
        }
        
        else if ((!email.getText().contains("@"))||(!email.getText().contains("."))||(email.getText().contains(","))){
            JOptionPane.showMessageDialog(null,"Please enter a valid email","Invalid Email",JOptionPane.WARNING_MESSAGE);
        }
        
        else if(!isAPhone || !phoneNumber.getText().matches("\\d{10,11}")){
            JOptionPane.showMessageDialog(null,"Please enter a valid phone number","Invalid Phone Number",JOptionPane.WARNING_MESSAGE);
            
        }
        
        
        else if (Integer.parseInt(birthdateDay.getSelectedItem())>day){
            JOptionPane.showMessageDialog(null, "Invalid Birth Date","Warning Message",JOptionPane.ERROR_MESSAGE);
            
        }
        else if (createPassword.getText().contains(",")){
            JOptionPane.showMessageDialog(null, "Password cannot contain (,)","Warning Message",JOptionPane.ERROR_MESSAGE);
        }
        
        else if((!createPassword.getText().equals((confirmPassword.getText())))){
            JOptionPane.showMessageDialog(null,"Please confirm the password correctly","Warning Message",JOptionPane.ERROR_MESSAGE);}
        
        else{
            try {
                JOptionPane.showMessageDialog(null,"Kindly wait for approval of registration","Registration Completed",JOptionPane.INFORMATION_MESSAGE);
                mainMenu main_menu = new mainMenu();
                main_menu.show();
                dispose();
                try {
                    BufferedWriter ApprovalList = new BufferedWriter(new FileWriter("ApprovalList.txt",true));
                    ApprovalList.append(name.getText()+","+userID.getText()+","+identity.getSelectedItem()+","+createPassword.getText()+","+birthdateYear.getSelectedItem()+"-"+birthdateMonth.getSelectedItem()+"-"+birthdateDay.getSelectedItem()+","+email.getText()+","+phoneNumber.getText()+",Not Approved"+"\n");
                    ApprovalList.close();
                } catch (IOException ex) {
                    Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedWriter roomTypeList = new BufferedWriter( new FileWriter("RoomTypeList.txt",true));
                roomTypeList.write(userID.getText()+","+roomType.getSelectedItem()+"\n");
                roomTypeList.close();
            } catch (IOException ex) {
                Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_completeSignupActionPerformed

    private void confirmpasswordShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmpasswordShowActionPerformed
        if (confirmpasswordShow.isSelected()){
            confirmPassword.setEchoChar((char)0);
        }
        else{
            confirmPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_confirmpasswordShowActionPerformed

    private void identityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identityActionPerformed

    private void identityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_identityItemStateChanged
        if (identity.getSelectedItem().equals("Resident")){
            roomType.setVisible(true);
            roomTypeLabel.setVisible(true);
        }
        
        else{
            roomType.setVisible(false);
            roomTypeLabel.setVisible(false);
        }
    }//GEN-LAST:event_identityItemStateChanged

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        mainMenu main_menu;
        try {
            main_menu = new mainMenu();
            main_menu.show();
        } catch (IOException ex) {
            Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new signUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private java.awt.Choice birthdateDay;
    private java.awt.Choice birthdateMonth;
    private java.awt.Choice birthdateYear;
    private javax.swing.JButton completeSignup;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JCheckBox confirmpasswordShow;
    private javax.swing.JPasswordField createPassword;
    private javax.swing.JCheckBox createpasswordShow;
    private javax.swing.JTextField email;
    private javax.swing.JComboBox<String> identity;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JComboBox<String> roomType;
    private javax.swing.JLabel roomTypeLabel;
    private javax.swing.JTextField userID;
    // End of variables declaration//GEN-END:variables
}
